import hashlib
import magic
import pydeep
import ConfigParser
import json
import os
def get_configuration(config_file):
    config = ConfigParser.SafeConfigParser()
    try:
        config.read(config_file)
        return config
    except Exception, err:
        print "%s - %s" %(Exception, err)

def initialize_environment(config):
    # Create malwarehouse root directory     
    base_dir = os.path.expanduser(config.get('settings', 'basedir'))
    try:
        if not os.path.exists(base_dir):
            os.makedirs(base_dir)
        return True
    except Exception, err:
        print err
        return False

def parse_sqlite_result(unparsed):
    "Takes the results from a SQLite query and parses it as a dictionary."
    return unparsed

def get_json(dictionary):
    return json.dumps(dictionary
                      )
def get_mimetype(malware_path):
    """Finds the standard mimetype for file and returns type name."""
    mime = magic.Magic(mime=True)
    return mime.from_file(malware_path)

def __json__(self):
    print "JSON would have been returned."
    pass

def __str__(self):
    return self.summary()
def first(iterable, default=None):
    for item in iterable:
        return item
    return default
